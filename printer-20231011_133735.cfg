 ## Voron Design VORON2 350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                           [mcu] section
## Thermistor types                    [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Bed sensor_pin                      [heater_bed] section
## Fan pins                            [heater_fan hotend_fan] amd [fan] sections
## Z Endstop Switch location           [safe_z_home] section
## Homing end position                 [gcode_macro G32] section
## Z Endstop Switch  offset for Z0     [stepper_z] section
## Probe points                        [quad_gantry_level] section
## Min & Max gantry corner postions    [quad_gantry_level] section
## PID tune                            [extruder] and [heater_bed] sections
## Fine tune E steps                   [extruder] section
[exclude_object]
[include KAMP_Settings.cfg]
[include mainsail.cfg]
[include ebb.cfg]
[include stealthburner_leds.cfg]
[include nozzle_scrub.cfg]
[include timelapse.cfg]
[include bed_mesh.cfg] 
[include neopixel_caselight.cfg]
[include led_effects.cfg]



[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" 
##--------------------------------------------------------------------
serial:/dev/ttyACM0
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_5C0039000251323438323636-if00


## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 4000                 #Max 4000
max_z_velocity: 20          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

##  Connected to X-MOT (B Motor)
[stepper_x]
step_pin: PE11
dir_pin: PE10
enable_pin:!PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PB14
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 0
homing_positive_dir: true
##  Make sure to update below for your relevant driver (5160)
[tmc5160 stepper_x] 
cs_pin: PE7
# Soft SPI
spi_software_mosi_pin: PE14
spi_software_miso_pin: PE13
spi_software_sclk_pin: PE12
interpolate: True
diag0_pin: ^!PB14 
run_current: 0.8 
sense_resistor:  0.075  #0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
#hold_current: 0.5
#stealthchop_threshold: 999999
#diag1_pin: PB14 # Pin connected to TMC DIAG1 pin (or use diag0_pin / DIAG0 pin)^!PB14


##  Connected to Y-MOT (A Motor)
[stepper_y]
step_pin: PD8
dir_pin: PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_y:virtual_endstop
#endstop_pin: ^PB13
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (5160)
[tmc5160 stepper_y] 
cs_pin: PE15
# Soft SPI
spi_software_mosi_pin: PE14
spi_software_miso_pin: PE13
spi_software_sclk_pin: PE12
diag0_pin: ^!PB13 
interpolate: True 
run_current: 0.8
sense_resistor:  0.075  #0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
#hold_current: 0.5
#stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##  In Z- Position
#endstop_pin: ^EBBCan: PB5
endstop_pin: probe:z_virtual_endstop
position_max: 330
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E1-MOT Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E2-MOT Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E3-MOT Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: !PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#   Bed Heater
#####################################################################
##  SSR Pin - In BED OUT position
[heater_bed]
heater_pin: PB4
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type:Generic 3950

##--------------------------------------------------------------------
##  Select the option that matches your board
#sensor_pin: PC3 # Spider 1.0 & 1.1
sensor_pin: PB0 # Spider 2.2
##--------------------------------------------------------------------

##  Adjust Max Power so your heater doesn't warp your bed
max_power: 0.75
min_temp: 0
max_temp: 125
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#######################################
#### Enclosure Temp Sensor Section ####
#######################################
[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC1
min_temp: 0
max_temp: 100
gcode_id: C



########################################
### Raspberry Pi Temp ##################
########################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

# ########################################
# ### Spider MCU temp ####################
# ########################################
# [temperature_sensor mcu_temp]
# sensor_type: temperature_mcu
# min_temp: 0
# max_temp: 500

#####################################################################
#   Probe
#####################################################################

##  This probe is not used for Z height, only Quad Gantry Leveling
##  In Z+ position
[probe]
#STATUS_LEVELING
##  If your probe is NO instead of NC, change pin to ^!PA3
pin:  ^EBBCan: PB5
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    # STATUS_LEVELING
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
          #STATUS_READY
        {% endif %}
    {% endif %}

 #####################################################################
#   Fans
 #####################################################################   


##  Controller fan - FAN2 Connector
[heater_fan controller_fan]
pin: PB2
#kick_start_time: 0.5
heater: heater_bed
heater_temp:50
fan_speed: 0.5

##  Exhaust fan - In E2 OUT Positon
[heater_fan exhaust_fan]
pin: PB3
max_power: 1.0
#shutdown_speed: 0.0
##kick_start_time: 0.5
heater: heater_bed
heater_temp: 60
fan_speed: 0.5

# [temperature_fan chamber]
# pin: PB3
# max_power: 1.0
# shutdown_speed: 0.0
# kick_start_time: 5.0
# cycle_time:0.01
# off_below:0.1
# sensor_type: NTC 100K beta 3950
# sensor_pin: z:P0.24
# min_temp: 0
# max_temp: 70
# target_temp: 35.0
# control: watermark
# gcode_id: C
 
##################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 72000

[safe_z_home]
home_xy_position:175,175
speed:100
z_hop:10


[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   45,20
   45,280
   305,280
   305,20

#--------------------------------------------------------------------
speed:300
horizontal_move_z: 5
retries: 7
retry_tolerance: 0.0075
max_adjust: 12

#####################################################################
#   Displays
#####################################################################

#--------------------------------------------------------------------

#   mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

#   To control Neopixel RGB in mini12864 display
[neopixel fysetc_mini12864]
pin: PC12
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.7
initial_BLUE: 0.7
color_order: RGB

#   Set RGB values on boot up for each Neopixel. 
#   Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
#--------------------------------------------------------------------

#####################################################################
#   Neopixel
#####################################################################

# [neopixel caselight]
# pin: PD3
# chain_count: 25
# color_order: GRB
# initial_RED: 0.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0

#####################################################################
#   Macros
#####################################################################

[gcode_macro PARK]
gcode:
    STATUS_HOMING
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30
    STOP_LED_EFFECTS
    

[gcode_macro G32]
gcode:
    STATUS_LEVELING
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_READY
    STOP_LED_EFFECTS



[gcode_macro MIDDEN]
gcode:
  STATUS_CALIBRATING_Z
  G1 Y175 F6000
  G1 X175 F6000
  STATUS_READY
  STOP_LED_EFFECTS

[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117



#####################################################################
#   print_start macro
#####################################################################

# *** THINGS TO UNCOMMENT: ***
# Bed mesh (2 lines at 2 locations)
# Z_TILT_ADJUST if your printer is a Trident
# Quad gantry level if your printer is a V2
# Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set MATERIAL = params.MATERIAL|default('ABS')|string %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  CASELIGHT_ON
  STATUS_HOMING         # Sets SB-leds to homing-mode
  SET_DISPLAY_TEXT MSG="Homing MOFO"
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  #CASELIGHT_ON
  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)


  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    #SET_LED_EFFECT EFFECT=rainbow_high
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan
    STOP_LED_EFFECTS

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    STATUS_HEATING
    CASELIGHT_ON
   # SET_LED_EFFECT EFFECT=rainbow_high
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed heating up: {target_bed}c" # Displays info
    STATUS_HEATING                                       # Sets SB-leds to heating-mode
   # SET_LED_EFFECT EFFECT=rainbow_high
    #SET_LED_EFFECT EFFECT=rainbow
    G1 X{x_wait} Y{y_wait} Z15 F9000                     # Goes to center of the bed
    M190 S{target_bed}                                   # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                 # Displays info
    G4 P300000                                           # Waits 5 min for the bedtemp to stabilize
  {% endif %}
  #STOP_LED_EFFECTS

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  STATUS_HEATING
  #SET_LED_EFFECT EFFECT=rainbow
  M109 S150                                    # Heats the nozzle to 150c
  STATUS_READY
  STOP_LED_EFFECTS
  CASELIGHT_ON

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  #  Uncomment for V2 (Quad gantry level AKA QGL)
  #CASELIGHT_ON
  SET_DISPLAY_TEXT MSG="Q.G.L."      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode status_leveling
  quad_gantry_level               # Levels the buildplate via QGL
  STATUS_HOMING
  G28 Z                           # Homes Z again after QGL
  STATUS_READY
 #STATUS_HOMING
  #STATUS_STAND_BY
  STOP_LED_EFFECTS

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  #  Uncomment for bed mesh (2 of 2)
  CASELIGHT_ON                   calibrate
  SET_DISPLAY_TEXT MSG="Adaptive mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode status_meshing 
  bed_mesh_calibrate                 # Starts bed mesh
  STOP_LED_EFFECTS
  SET_DISPLAY_TEXT MSG="Cleaning nozzle"    # Displays info
  STATUS_CLEANING
  clean_nozzle
 # STOP_LED_EFFECTS
  

  # Heats up the nozzle up to target via data from slicer
  CASELIGHT_ON
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  #SET_LED_EFFECT EFFECT=rainbow_high
  #SET_LED_EFFECT EFFECT=rainbow
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                           # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  
  STOP_LED_EFFECTS
  CASELIGHT_ON
  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  VORON_PURGE
  # G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  # G0 Z0.4                                          # Raises Z to 0.4
  # G91                                              # Incremental positioning 
  # G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position
  M117

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
     STATUS_READY
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.691
#*# pid_ki = 1.009
#*# pid_kd = 351.941
#*#
#*# [extruder]
#*#
#*# [stepper_z]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.051250, 0.075000, 0.060000
#*# 	0.063750, 0.081250, 0.082500
#*# 	0.070000, 0.078750, 0.083750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 157.02
#*# max_x = 191.13
#*# min_y = 158.06
#*# max_y = 191.74
#*#
#*# [probe]
#*# z_offset = -0.117
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52.4
#*# shaper_type_y = zv
#*# shaper_freq_y = 37.6
